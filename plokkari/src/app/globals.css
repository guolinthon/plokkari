@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

.clean-button {
  top: 50px;
  left: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  border: 3px solid black;
  position: absolute;
  overflow: hidden;
  z-index: 9998;
}

.hexagon {
  position: relative;
  height: 22px;
  width: 22px;
  /* We cut the element in an hexagonal shape */
  z-index: 9998;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}

.hexagon::after { 
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  content: ''; 
  background: black;
  clip-path: polygon(
    /* We first go around the pseudo element to recreate the hexagon */
    50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%, 
    /* We make sure to close the hexagon and go back to the start */
    50% 0%, 
    /* We then go down inside the hexagon */
    50% 3px,
    /* We finally go around the pseudo element in reverse to carve a smaller hexagon inside */
    /* 0.49999999999999994 is sin(30deg) as it's only supported in Safari for now */
    3px calc(25% + 3px * 0.49999999999999994), 3px calc(75% + 3px * -0.49999999999999994), 50% calc(100% - 3px), calc(100% - 3px) calc(75% + 3px * -0.49999999999999994), calc(100% - 3px) calc(25% + 3px * 0.49999999999999994), 50% 3px
  );
  z-index: 9998;
}

.map-container {
  position: relative;
  width: 100%;
  height: 100vh;
}

.start-button {
  position: absolute;
  font-weight: bold;
  bottom: 1rem;
  left: 50%;
  font-size: 1.5rem;
  background-color: white;
  border: 5px solid rgb(146, 218, 146);
  border-radius: 50%;
  cursor: pointer;
  height: 100px;
  width: 100px;
  z-index: 9999;
  transition: transform 0.2s ease-in-out;
}

.start-button:hover {
  transform: scale(1.2);
}

.toolbar {
  position: fixed;
  display: flex;
  justify-content: space-between;
  top: 0;
  left: 0;
  right: 0;
  height: 45px;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  z-index: 9998;
  /* background-color: white; */
}

.toolbar-buttons {
  display: flex;
  font-weight: bold;
  font-size: 18pt;
  justify-content: space-between;
  align-items: center;
  padding: 0 16px ;
  height: 100%;
  color: black;
  z-index: 9999;
}
.toolbar-buttons button {
  margin-right: 16px;
}

.leaflet-top {
  bottom: 0;
}
  
.leaflet-top .leaflet-control-zoom {
  top: 75px;
  transform: translateY(-50%);
}

.leaflet-control-attribution {
  top: 75px;
}